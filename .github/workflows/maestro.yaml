name: Maestro E2E with Docker Android Emulator

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  maestro-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      emulator:
        image: budtmo/docker-android:emulator_11.0
        ports:
          - 6080:6080
          - 5554:5554
          - 5555:5555
        options: >-
          --privileged
          --device /dev/kvm
          -e EMULATOR_DEVICE="Samsung Galaxy S10"
          -e WEB_VNC=true
          -e APPIUM=false
          -e AUTO_RECORD=false
          -e ENFORCE_DEV_MODE=false

    steps:
      - name: 👅 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Build APK
        run: ./gradlew assembleDebug

      - name: 🧰 Install Maestro CLI
        run: |
          curl -Ls https://get.maestro.mobile.dev | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: 🧰 Install ADB
        run: |
          sudo apt-get update
          sudo apt-get install -y android-tools-adb

      - name: 🛠️ Wait for Emulator
        run: |
          adb connect localhost:5555
          export DEVICE_ID=$(adb devices | grep 'device$' | awk 'NR==1{print $1}')
          echo "Using emulator: $DEVICE_ID"
          adb -s $DEVICE_ID wait-for-device
          adb -s $DEVICE_ID shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          adb -s $DEVICE_ID shell input keyevent 82

      - name: 📱 Install APK
        run: |
          export DEVICE_ID=$(adb devices | grep 'device$' | awk 'NR==1{print $1}')
          adb -s $DEVICE_ID install -r app/build/outputs/apk/debug/app-debug.apk

      - name: 🧪 Run Maestro Tests and Capture Output
        run: |
          echo "🧹 Cleaning previous screenshots and logs..."
          rm -rf screenshots maestro-output.log || true
          mkdir -p screenshots

          echo "🚀 Running Maestro tests..."
          maestro test maestro_flows/flows.yaml | tee maestro-output.log

          echo "📂 Moving screenshots..."
          mv *.png screenshots/ || true

      - name: 📂 Prepare GitHub Pages Output
        if: always()
        run: |
          mkdir -p ./gh-pages/screenshots
          cp -v screenshots/*.png ./gh-pages/screenshots/ || echo "No screenshots to copy"
          cp -v maestro-output.log ./gh-pages/ || echo "No log file found"

      - name: 📄 Generate Pretty HTML Report
        if: always()
        run: |
          echo '<html><head><meta charset="UTF-8"><title>Maestro Test Report</title>
          <style>
            body { font-family: sans-serif; padding: 2rem; background: #f5f5f5; color: #222; }
            h1 { font-size: 2.2rem; }
            h2 { margin-top: 2rem; font-size: 1.5rem; }
            table { width: 100%; border-collapse: collapse; margin-top: 1rem; }
            table td, table th { border: 1px solid #ccc; padding: 0.5rem; text-align: left; }
            table th { background: #eee; }
            pre { background: #fff; padding: 1rem; border-radius: 0.5rem; white-space: pre-wrap; overflow-x: auto; }
            .screenshots-grid {
              display: grid;
              grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
              gap: 1.5rem;
              margin-top: 1rem;
            }
            .screenshot {
              background: #fff;
              border: 1px solid #ddd;
              border-radius: 0.5rem;
              padding: 1rem;
              box-shadow: 0 2px 4px rgba(0,0,0,0.06);
              text-align: center;
            }
            .screenshot img {
              border-radius: 0.5rem;
              max-width: 100%;
              height: auto;
              margin-top: 0.5rem;
            }
          </style></head><body>' > ./gh-pages/index.html

          echo '<h1>📊 Summary</h1>' >> ./gh-pages/index.html

          total_tests=$(grep -cE "COMPLETED|FAILED" maestro-output.log || echo 0)
          passed=$(grep -c "COMPLETED" maestro-output.log || echo 0)
          failed=$(grep -c "FAILED" maestro-output.log || echo 0)
          percent=$(awk "BEGIN {printf \"%.1f\", ($passed*100)/($total_tests == 0 ? 1 : $total_tests)}")
          app_name=$(grep -oP 'Launch app "\K[^"]+' maestro-output.log | head -1)
          device_name=$(adb devices -l | grep 'model:' | awk '{print $5}' || echo "Unknown")
          os_version="Android 11 (Docker Emulator)"

          echo "<table>
            <tr><th>📱 App</th><td>$app_name</td></tr>
            <tr><th>🧩 OS</th><td>$os_version</td></tr>
            <tr><th>📱 Device</th><td>$device_name</td></tr>
            <tr><th>✅ Tests Passed</th><td>$passed</td></tr>
            <tr><th>❌ Tests Failed</th><td>$failed</td></tr>
            <tr><th>📊 Success Rate</th><td>$percent%</td></tr>
          </table>" >> ./gh-pages/index.html

          echo '<h2>🧪 Test Report</h2><pre>' >> ./gh-pages/index.html
          sed -e 's/Launch app/🚀 &/' \
              -e 's/Assert that/🔍 &/' \
              -e 's/Tap on/👆 &/' \
              -e 's/Input text/📝 &/' \
              -e 's/Wait for/⏳ &/' \
              -e 's/Take screenshot/📸 &/' \
              -e 's/COMPLETED/✅ COMPLETED/' \
              -e 's/FAILED/❌ FAILED/' \
              -e 's/RUNNING/🏃 RUNNING/' maestro-output.log >> ./gh-pages/index.html
          echo '</pre>' >> ./gh-pages/index.html

          echo '<h2>🖼️ Screenshots</h2><div class="screenshots-grid">' >> ./gh-pages/index.html
          for img in ./gh-pages/screenshots/*.png; do
            base=$(basename "$img" .png)
            echo "<div class='screenshot'><strong>🔹 $base</strong><img src='screenshots/$base.png'/></div>" >> ./gh-pages/index.html
          done
          echo '</div></body></html>' >> ./gh-pages/index.html

      - name: 📤 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
