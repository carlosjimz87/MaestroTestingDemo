name: Maestro E2E with Android Emulator

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  maestro-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    container:
      image: cimg/android:2025.04.1-node

    steps:
      - name: 👅 Checkout code
        uses: actions/checkout@v4

      - name: 🛠️ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils unzip zip

      - name: 🚀 Build APK
        run: ./gradlew assembleDebug

      - name: 🛠️ Install Android Emulator
        run: |
          yes | sdkmanager --update
          yes | sdkmanager "platform-tools" "platforms;android-30" "emulator" "system-images;android-30;google_apis;arm64-v8a"

      - name: 🚀 Create Android AVD
        run: |
          mkdir -p $HOME/.android/avd
          export ANDROID_AVD_HOME=$HOME/.android/avd
          echo "no" | avdmanager create avd -n test-emulator -k "system-images;android-30;google_apis;arm64-v8a" --device "pixel" --force

      - name: 🚀 Start Emulator & Wait for Boot
        run: |
          export ANDROID_AVD_HOME=$HOME/.android/avd
          $ANDROID_HOME/emulator/emulator -avd test-emulator -no-window -no-snapshot -no-audio -no-boot-anim &
          timeout 600 adb wait-for-device || { echo "❌ Emulator failed to start!"; exit 1; }
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'

      - name: 🛠️ Install Maestro CLI
        run: |
          curl -fsSL https://get.maestro.mobile.dev | bash
          mv ~/.maestro/bin/maestro /usr/local/bin

      - name: 🚀 Run Maestro Tests
        run: |
          echo "✅ Verifying APK path..."
          ls -lh app/build/outputs/apk/debug/app-debug.apk || { echo "❌ APK not found!"; exit 1; }

          echo "📱 Installing APK on emulator..."
          adb install app/build/outputs/apk/debug/app-debug.apk || { echo "❌ Failed to install APK"; exit 1; }

          echo "🔍 Checking installed packages..."
          adb shell pm list packages | grep ${{ secrets.PACKAGE_NAME }} || { echo "❌ App not installed!"; exit 1; }

          echo "🚀 Running Maestro tests..."
          maestro test maestro_flows/flows.yaml --format junit --output maestro-report.xml
        continue-on-error: true

      - name: 📸 Capture Emulator Screenshot on Failure
        if: failure()
        run: adb exec-out screencap -p > screenshot.png || true

      - name: 📄 Upload Screenshot Artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-screenshot
          path: screenshot.png

      - name: 📟 Archive Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: maestro-test-results
          path: maestro-report.xml

      - name: 📟 Generate GitHub Pages HTML
        if: always()
        run: |
          echo "<html><head><title>Maestro Test Report</title></head><body>" > index.html
          echo "<h1>🚀 Maestro Test Report</h1>" >> index.html
          echo "<p>Download the <a href='${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts'>Maestro JUnit Report</a> for details.</p>" >> index.html
          echo "</body></html>" >> index.html

      - name: 📄 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
